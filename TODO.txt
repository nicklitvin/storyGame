TODO
audio playing
pausing
menu screens

FOR LATER
consider making Frame class with Audio,Test,and Interaction as children for pause
Make events belong to Game object
create txt file that takes user input and creates scenes
dont keep track of mouse when not necessary during scene
preload everything, loading screen
caching mp3 files
add about page
localStorage: store scene, events
class diagram to easily rearrange scenes, LinkedList-like
easter egg for changing localstorage
should pause restart audio? probably not
if mouse not on page focus during testBoundary => cheating => fail

Test
async testPausingAudioInGame(){
        const myGame = new Game(storage.testPausingAudio)
        myGame.testRunWithoutWaiting()

        await new Promise( (res)=>{
            setTimeout( ()=>{
                myGame.pause()
                res()
            }, 50)
        })

        await new Promise( (res)=>{
            setTimeout( async ()=>{
                await myGame.resume()
                res()
            }, 50)
        })
        assert(audio.complete == true, "audio should be over")
    }

Game
pause(){
    this.currentScene.pause()
}

async resume(){
    await this.currentScene.resume()
}

Scene
pause(){
    try{
        this.currentFrame.pause()
    }
    catch{
        console.log("cant pause")
    }
}

resume(){
    try{
        this.currentFrame.play()
    }
    catch{
        console.log("cant resume")
    }
}